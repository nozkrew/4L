{% extends 'base_home.html.twig' %}

{% block body %}
    
    <div class="container">
        {{form_start(form, {'attr':{'id':'payment-form'}})}}
            <h3>Votre Equipage</h3>
            <div class="form-group">
                {{form_label(form.siteName)}}
                {{form_widget(form.siteName, {'attr':{'class':'form-control', 'placeholder':"Nom de votre équipage"}})}}
            </div>
            <h3>Equipier 1</h3>
            <div class="row">
                <div class="col-sm">
                  {{app.user.firstname}}
                </div>
                <div class="col-sm">
                  {{app.user.lastname}}
                </div>
            </div>
            <div class="row">
                <div class="col-sm">
                  {{app.user.email}}
                </div>
            </div>
            <h3>Equipier 2</h3>
            <div class="form-row">
                <div class="form-group col-md-6">
                    {{form_label(form.secondUserFirstname)}}
                    {{form_widget(form.secondUserFirstname, {'attr':{'class':'form-control', 'placeholder':"Prénom"}})}}
                </div>
                <div class="form-group col-md-6">
                    {{form_label(form.secondUserLastname)}}
                    {{form_widget(form.secondUserLastname, {'attr':{'class':'form-control', 'placeholder':"Nom"}})}}
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    {{form_label(form.secondUserUsername)}}
                    {{form_widget(form.secondUserUsername, {'attr':{'class':'form-control', 'placeholder':"Pseudo"}})}}
                </div>
                <div class="form-group col-md-6">
                    {{form_label(form.secondUserEmail)}}
                    {{form_widget(form.secondUserEmail, {'attr':{'class':'form-control', 'placeholder':"nom.prenom@mail.com"}})}}
                </div>
            </div>
            <h3>{{subscription.name}} - {{ subscription.price }} €</h3>
            <div class="form-group">
              <label for="card-element">Carte de crédit</label>
              <div id="card-element" class="form-control">
                <!-- A Stripe Element will be inserted here. -->
              </div>

              <!-- Used to display Element errors. -->
              <div id="card-errors" role="alert"></div>
            </div>

            <button type="submit" class="btn btn-success">Payer</button>
        {{form_end(form)}}
    </div>
    
{% endblock %}

{% block javascripts %}
    {{parent()}}
    <script src="https://js.stripe.com/v3/"></script>
    <script type="text/javascript">
        var stripe = Stripe('{{stripe_public_key}}');
        var elements = stripe.elements();
        
        // Custom styling can be passed to options when creating an Element.
        var style = {
          base: {
            // Add your base input styles here. For example:
            fontSize: '16px',
            color: "#32325d",
          }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', {style: style});

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');
        
        card.addEventListener('change', function(event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
              displayError.textContent = event.error.message;
            } else {
              displayError.textContent = '';
            }
        });
        
        // Create a token or display an error when the form is submitted.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function(event) {
            event.preventDefault();

            stripe.createToken(card).then(function(result) {
              if (result.error) {
                // Inform the customer that there was an error.
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;
              } else {
                // Send the token to your server.
                stripeTokenHandler(result.token);
              }
            });
        });
        
        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }
    </script>
    
{% endblock %}